@login_with_role
  Scenario: Login as driver
    Given user is on the login page
    Then user logs in as "driver"

  @login_with_role
  Scenario: Login as sales manager
    Given user is on the login page
    Then user logs in as "sales manager"

  @login_with_role
  Scenario: Login as store manager
    Given user is on the login page
    Then user logs in as "store manager"



    We have almost identical scenarios.. So we can use Scenario outline..
    in TestNG we have @DataProvider: to run same test, with different data sets.

    In cucumber, we have Scenario Outline : to run same test scenario, with different data sets.


    We can merge these 3 scenario into 1 Scenario Outline.

    @login_with_role
      Scenario Outline: Login as <role>
        Given user is on the login page
        Then user logs in as "<role>"

        Examples: roles
        | role          |
        | driver        |            @Then("user logs in as {role}")
        | sales manager |            public void user_logs_in_as(String role) {
        | store manager |               loginPage.login(role);
                                        }



    *** This Scenario Outline will run 3 times.

    * Parameter is very sensitive, in all aspects.
    * First row in Examples is reserved for parameters...


    Scenario: - it runs only once
    Scenario Outline: - it runs as many many times, as many rows of data we have in examples table.(Excluding first row)


    Data Driven Testing:
        Testing approach that allows to store test data and test separatly.

    Test Data --> Coming from cucumber.feature file
    Test Logic --> StepDefinitions.java

    If we want to run exactly same test with different data set, use Scenario Outline.

    Scenario Outline = Data Provider

    In cucumber , we pass test data from data table, Examples table and parameters. In case of Scenario Outline,
    test runs multiple times automatically, as many rows of data examples table contains.(rows-1 , because of first row)

    Scenario Outline must be followed by Examples table. We cannot create Scenario Outline without examples table.

    @login_with_credentials_ddt
      Scenario Outline: DDT example with credentials, Login as <username>
        Given user is on the login page
        Then user enters "<username>" username and "<password>" password

        Examples:
          | username        | password    |
          | storemanager85  | UserUser123 |     <-- 1st scenario
          | user160         | UserUser123 |     <-- 2nd Scenario
          | salesmanager110 | UserUser123 |     <-- 3rd Scenario

          in between <> we pass parameter. Parameter must match some column names in examples table. Data sets will be
          used from top to bottom.

        Keywords we have in Cucumber(Gherkin keywords):
          Feature
          Background
          Scenario
          Scenario Outline
          Given
          When
          Then
          And
          But
          Examples

    If we have group of scenario that share same test steps, we can combine them and create scenario Outline.

    If test steps ate the same, but only test data is different, we can use Scenario outline.

    Data will be coming from Examples table.

    1 row = 1 set of data = 1 test scenario = 1 test execution.

    Examples:
        | username       |  password   |
        | storemanager85 | UserUser123 |

**   Question : Can we have more than 1 Examples table for same Scenario Outline?
        -- YES.

 **  Question: What's the difference between data table and examples table?
        Data table used to expand 1 specific test step
        Examples table used to provide test data to Scenario

    @login_with_roles_ddt_2
      Scenario Outline: Login as <role> and verify <title> page title is correct
        Given user is on the login page
        And user logs in as "<role>"
        When user navigates to "<module>" then to "<sub module>"
        Then the page title should be "<title>"

        Examples: drivers
          | role   | module     | sub module      | title                                                        |
          | driver | Fleet      | Vehicles        | Car - Entities - System - Car - Entities - System            |

     In case of Examples table, we don't read values as list, map, list<map<key, value>>, We retrieve values separately,



    We have FailedRunner class to rerun the test that failed.

  **** Interview Answer:
    To rerun scenarios that failed, add "rerun:target/rerun.txt" into cucumber class.
    Then , we can execute that rerun.txt file, by specifying path to it: features = "@target/rerun.txt",
    To perform these runs automatically, add it into maven-surefire configuration.

                <configuration>
                    <runOrder>Alphabetical</runOrder
                       <includes>
                          <include>**/CucumberRunner.java</include>
                          <include>**/FailedRunner.java</include>
                       </includes>
                       <testFailureIgnore>true</testFailureIgnore>
                </configuration>

    If some test failed, rerun.txt will tell you what feature file and what scenarios exactly failed.

       file:src/test/resources/features/SmokeTest.feature:11:15

    11:15 means that scenario on line 11 and 15 failed.

    ###################################################

    Scenario Outline -- type of scenario that runs multiple times. We use Scenario Outline to run same test with
    different data sets. In testing, it calls Data Driven Testing.

    Scenario Outline pull data from Examples table. So don't forget to add it.

    To read specific parameter, use angled brackets <>

    To read value, we have to put role inside angled brackets: <role>

